---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

// 获取所有文章，并按日期排序
const articles: CollectionEntry<'articles'>[] = await getCollection('articles');
const sortedArticles = articles.sort(
  (a, b) => b.data.date.getTime() - a.data.date.getTime()
);
---
<div class="my-8">
  <h2 class="text-2xl font-bold mb-6 text-primary-900 dark:text-primary-100">文章列表</h2>
  <ul>
    {sortedArticles.map((article: CollectionEntry<'articles'>) => (
      <li class="mb-6 list-none">
        <a href={`/articles/${article.id}`} class="block p-4 rounded-lg no-underline text-inherit bg-white dark:bg-dark-card border border-secondary-200 dark:border-dark-border hover:border-primary-300 dark:hover:border-primary-700 transition-all duration-300 hover:shadow-md">
          <h3 class="m-0 mb-2 text-primary-800 dark:text-primary-200">{article.data.title}</h3>
          <p class="text-sm text-secondary-500 dark:text-secondary-400 my-1">{article.data.date.toLocaleDateString('zh-CN')}</p>
          {article.data.summary && <p class="my-2 leading-relaxed text-secondary-700 dark:text-secondary-300">{article.data.summary}</p>}
          {article.data.tags && (
            <div class="flex flex-wrap gap-2 mt-2">
              {article.data.tags.map((tag: string) => (
                <span class="text-xs bg-primary-50 dark:bg-primary-900/30 text-primary-700 dark:text-primary-300 py-1 px-2 rounded-full">{tag}</span>
              ))}
            </div>
          )}
        </a>
      </li>
    ))}
  </ul>
</div> 